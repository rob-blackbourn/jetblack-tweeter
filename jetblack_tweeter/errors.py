"""Errors"""

import io
from typing import Mapping
from urllib.error import HTTPError


class TweeterHttpError(HTTPError):
    """The base class for tweeter errors"""

    def __init__(
            self,
            url: str,
            status_code: int,
            headers: Mapping[str, str],
            message: str
    ) -> None:
        """Initialise the error.

        Args:
            url (str): The url that generated the error.
            status_code (int): The status code that was returned.
            headers (Mapping[str, str]): The headers that were returned.
            message (str): The message supplied.
        """
        super().__init__(
            url,
            status_code,
            message,
            headers,
            io.BytesIO(b'')
        )


class StreamError(TweeterHttpError):
    """An error from the stream end point"""

    def __init__(
            self,
            url: str,
            status_code: int,
            headers: Mapping[str, str]
    ) -> None:
        """Initialise the stream error.

        Args:
            url (str): The url that generated the error.
            status_code (int): THe status code that was returned.
            headers (Mapping[str, str]): THe headers that were returned.
        """
        super().__init__(
            url,
            status_code,
            headers,
            'stream request failed'
        )


class ApiError(TweeterHttpError):
    """An error generated by api endpoints"""

    def __init__(
            self,
            url: str,
            status_code: int,
            headers: Mapping[str, str]
    ) -> None:
        """Initialise the api error.

        Args:
            url (str): The url that generated the error
            status_code (int): The status code that was returned.
            headers (Mapping[str, str]): The headers that were returned.
        """
        super().__init__(
            url,
            status_code,
            headers,
            'api request failed'
        )
